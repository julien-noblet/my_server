services:
  minio:
    image: minio/minio:latest
    restart: unless-stopped
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-loki}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-supersecret}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    ports:
      - 9000
    volumes:
      - ../.data/minio:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - loki
      - traefik
  loki-read:
    image: grafana/loki:latest
    command: 
    - -config.file=/etc/loki/config.yaml
    - -target=read
    - -config.expand-env=true
    - --pattern-ingester.enabled=true
    - -validation.max-label-names-per-series=50
      #ports:
      #- 3101:3100
      #- 7946
      #- 9095
    restart: unless-stopped
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-loki}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-supersecret}
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.loki-read.rule: PathPrefix(`/api/prom/`) || PathPrefix(`/loki/api/`)
      traefik.http.services.svc-loki-read.loadbalancer.server.port: 3100
      traefik.http.routers.loki-read.service: svc-loki-read@docker
      traefik.http.routers.loki-read.entrypoints: loki
    networks: &loki-dns
      traefik:
      loki:
        aliases:
          - loki
  loki-write:
    image: grafana/loki:latest
    command: 
      - -config.file=/etc/loki/config.yaml 
      - -target=write
      - -config.expand-env=true
      - --pattern-ingester.enabled=true
      - -validation.max-label-names-per-series=50
      #ports:
      #- 3102:3100
      #- 7946
      #- 9095
    restart: unless-stopped
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-loki}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-supersecret}
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.loki-write.rule: Path(`/api/prom/push`) || Path(`/loki/api/v1/push`)
      traefik.http.services.svc-loki-write.loadbalancer.server.port: 3100
      traefik.http.routers.loki-write.service: svc-loki-write@docker
      traefik.http.routers.loki-write.entrypoints: loki
      # traefik.http.routers.loki-write.middlewares: stripprefix-loki-write@docker
      # traefik.http.middlewares.stripprefix-loki-write.stripprefix.prefixes: /api/prom/push
    networks:
      <<: *loki-dns
  loki-backend:
    image: grafana/loki:latest
    restart: unless-stopped
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml
    ports:
      - "3100"
      - "7946"
    command: 
      - -config.file=/etc/loki/config.yaml
      - -target=backend
      - -legacy-read-mode=false
      - -config.expand-env=true
      - --pattern-ingester.enabled=true
      - -validation.max-label-names-per-series=50
    depends_on:
      traefik:
        condition: service_healthy
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-loki}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-supersecret}
    networks:
      - loki
      - traefik

  alloy:
    image: grafana/alloy:latest
    restart: unless-stopped
    volumes:
      - ./loki/config.alloy:/etc/alloy/config.alloy:ro
      - ./loki/positions.yaml:/var/log/positions.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - geoip:/usr/share/GeoIP
      # calibre
      - ../calibre/config/calibre-web.log:/calibre/config/calibre-web.log:ro
      # need waf volume !
      - ../waf_logs:/waf_logs:ro
    command:  
    - run 
    - --server.http.listen-addr=0.0.0.0:12345 
    - --storage.path=/var/lib/alloy/data 
    - /etc/alloy/config.alloy
    ports:
      - 12345:12345
    depends_on:
      traefik:
        condition: service_healthy
      geoip:
        condition: service_completed_successfully
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.loki-alloy.rule: Host(`alloy.local`)
      traefik.http.routers.loki-alloy.middlewares: stripprefix-loki-alloy@docker
      traefik.http.routers.loki-alloy.entrypoints: web
      traefik.http.middlewares.stripprefix-loki-alloy.stripprefix.prefixes: /alloy
    networks:
      - loki
      - public
      - traefik


  geoip:
    image: maxmindinc/geoipupdate
    container_name: geoip
    restart: on-failure
    environment:
      GEOIPUPDATE_ACCOUNT_ID: ${GEOIP_ACCOUNT_ID}
      GEOIPUPDATE_LICENSE_KEY: ${GEOIP_LICENSE_KEY}
      GEOIPUPDATE_EDITION_IDS: GeoLite2-City
    volumes:
      - geoip:/usr/share/GeoIP
volumes:
  geoip:

networks:
  loki:
    internal: true
    name: loki
